@model PagedList.IPagedList<IMS.Models.IMSEntity>
@using PagedList.Mvc;
<link href="~/assets/css/custom.css" rel="stylesheet" />
@{
    string role = ViewBag.role;
    string empid = ViewBag.empid;
    string dept = ViewBag.department;
    string location = ViewBag.location;
    ViewBag.Title = "InwardList";
    Layout = "~/Views/Shared/_Layout_IMS.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link href="~/Content/sweetalert2.min.css" rel="stylesheet" />
<link href="~/assets/css/custom.css" rel="stylesheet" />

<div class="gatepass-list">
    <h5 class="content-title mb-3">Gatepass</h5>
    <div class="card">
        @{
            string count = ViewBag.display;
        }
        <div class="d-flex p-3 px-4 align-items-center inward-search-div ol-md-12 justify-content-between">
            <div class="d-flex align-items-center w-55">
                <h5 class="search-font pe-2 mb-0">Search By:</h5>

                @using (Html.BeginForm("GatepassList", "Add_Gatepass", FormMethod.Post))
                {
                    @Html.DropDownList("Name", new List<SelectListItem>
                                  {
                                     new SelectListItem{Text = "Gatepass Number", Value="GatepassNo"},
                                     new SelectListItem{Text= "Department" , Value="Gatepass_department"},
                                     new SelectListItem{Text= "Location" , Value="Gatepass_Location"},
                                     new SelectListItem{Text= "GatepassType" , Value="GatepassType"},
                                     new SelectListItem{Text= "Sender" , Value="Sender"},
                                     new SelectListItem{Text= "Receiver" , Value="Receiver"},
                                     new SelectListItem{Text= "Status" , Value="Status"},
                                  }, "Select", new { @id = "select", @style = "margin-right: 10px; border: 1px solid #ccc;border-radius: 9px;padding: 5px;width: 150px; /* Adjust the width as needed */box-sizing: border-box;color:#4C5157;", @onchange = "Valuefunction()" })

                    @Html.TextBox("SearchValue", null, new { @style = "display:none;color:black", @class = "search1", @id = "search_by_text" })
                    {
                        // Assuming you have fetched the department data from the database and stored it in a variable named departmentsList
                        List<SelectListItem> departmentItems = new List<SelectListItem>();
                        var context = new IMS.Entities.ServiceVMSEntities();
                        var departmentsList = (from s in context.ServiceUserDepartments
                                               select new
                                               {
                                                   userDepartmentName = s.userDepartmentName,
                                               });


                        foreach (var department in departmentsList)
                        {
                            departmentItems.Add(new SelectListItem { Text = department.userDepartmentName, Value = department.userDepartmentName });
                        }
                        @Html.DropDownList("DeptName", departmentItems, "Select Department", new { @id = "DeptName", @style = "margin-right: 10px; border: 1px solid #ccc; border-radius: 9px; padding: 5px; width: 145px; box-sizing: border-box;display:none;color:#4C5157", @onchange = "Valuefunction()" })
                    }
                    @Html.DropDownList("SearchValue4", new List<SelectListItem>
                    {
                      new SelectListItem{ Text = "opex", Value ="opex"},
                      new SelectListItem{Text= "capex" , Value ="capex"},
                      new SelectListItem{Text= "rental" , Value ="rental"},
                    }
                  , "Select", new { @id = "ExpenseNature", @name = "SearchValue2", @class = "search1", @style = "display:none;color:black" })

                    <input class="search2" type="date" value="Search" style="display:none;" id="search_by_date" name="searchdate" />
                    <input type="submit" value="Search" id="submit" style="color:#561398">

                     if (ViewBag.countForsearch == 1)
                    {
                        <span class="project_links" style="float:right; margin-top:2px">

                            <a class="clear-font" href="@Url.Action("GatepassList", "Add_Gatepass")">
                                Clear Search
                            </a>
                        </span>
                    }
                   


                }
            </div>

            <div class="d-flex align-items-center justify-content-end gatepass-form">
                @if (role == "Inventory Incharge" || role == "Receiver" || role == "Administrator")
                {
                    
               <a class="action-btn mr-18" href="@Url.Action("Create_Gatepass", "Add_Gatepass")">Create Gatepass</a>
                    
                }
                @if (role == "Inventory Incharge" || role == "Security Guard")
                {
                        var isActionable = Request.QueryString["name"] == "Actionalble";

                        @Html.ActionLink("Actionable Items", "GatepassList", "Add_Gatepass", new { @name = "Actionalble" }, new { @class = "action-btn mr-18", @style = "margin-bottom:3px;" })

                        if (isActionable)
                        {
                        <a class="action-btn" href="@Url.Action("GatepassList", "Add_Gatepass")" style="margin-bottom:3px;">
                            Clear Search
                        </a>
                        }
                }
            </div>
          </div>

        <div class="card-body pt-0">
            <div class="form addInward inward-list-table">
                <div class="table-wrapper">
                    <table id="paginatedTable">
                        <thead>
                            <tr>
                                <th scope="col">
                                    @Html.ActionLink("Gatepass No", "GatepassList", new { sortOrder = ViewBag.GatepassNo, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Location", "GatepassList", new { sortOrder = ViewBag.Gatepass_Location, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Department", "GatepassList", new { sortOrder = ViewBag.Gatepass_department, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Gatepass Type", "GatepassList", new { sortOrder = ViewBag.GatepassType, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Category", "GatepassList", new { sortOrder = ViewBag.Category, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Sender", "GatepassList", new { sortOrder = ViewBag.Sender, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Receiver", "GatepassList", new { sortOrder = ViewBag.Receiver, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                    @Html.ActionLink("Status", "GatepassList", new { sortOrder = ViewBag.Status, searchString = ViewBag.searchString, Name = ViewBag.Name, SearchValue = ViewBag.searchValue, searchdate = ViewBag.searchdate })
                                </th>
                                <th scope="col">
                                </th>
                                <th scope="col"></th>
                            </tr>
                            @if (Model.Count() == 0)
                            {
                                <tr>
                                    <td> Records not found </td>
                                </tr>
                            }
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                            <tr>
                                <td data-label="inward-date">
                                    @{

                                        byte[] encoded = System.Text.Encoding.UTF8.GetBytes(item.GatepassID);
                                        var GatepassID = Convert.ToBase64String(encoded);
                                    }
                                    @Html.ActionLink(item.Gatepass_Number, "GatepassDetails", "Add_Gatepass", new { gatepassID = GatepassID }, null)
                                </td>
                                <td data-label="inward-date">
                                    @Html.DisplayFor(modelItem => item.Location)
                                </td>
                                <td data-label="department">
                                    @{
                                        var context = new IMS.Entities.ServiceVMSEntities();
                                        var deptnm = (from u in context.ServiceUserDepartments where u.userDepartmentId == item.userDepartmentId select new { u.userDepartmentName }).FirstOrDefault();

                                    }
                                    @Html.DisplayFor(modelItem => deptnm.userDepartmentName)
                                </td>
                                <td data-label="location">
                                    @Html.DisplayFor(modelItem => item.GatepassType)
                                </td>

                                <td data-label="expense-nature">
                                    @Html.DisplayFor(modelItem => item.GatePass_Category)
                                </td>


                                <td data-label="inward-raised-by">
                                    @{
                                        var context1 = new IMS.Entities.ServiceVMSEntities();
                                        var user1 = (from u in context1.Users where u.employeeId == item.SenderID select new { u.userName });
                                        string sender_name = string.Empty;
                                        foreach (var u in user1)
                                        {
                                            sender_name = u.userName;
                                        }

                                    }

                                    @sender_name

                                </td>
                                <td> @Html.DisplayFor(modelItem => item.ReceiverName)</td>
                                <td class="@Html.DisplayFor(modelItem => item.GatePass_Status)">
                                    <span> @Html.DisplayFor(modelItem => item.GatePass_Status)</span>
                                </td>
                                <td data-label="actions">
                                    @{
                                        byte[] encode = System.Text.Encoding.UTF8.GetBytes(item.GatepassID);
                                        var GatepassCode = Convert.ToBase64String(encode);
                                    }
                                    <a class="dropdown-item1" href="@Url.Action("DeleteGatepass", "Add_Gatepass", new { @id = GatepassCode })"><img class="px-2" src="~/assets/images/icons/trash.svg" alt="Delete" />
                                </td>
                                @{

                                    string status = string.Empty;
                                    string roleinims = string.Empty;
                                    string Location = string.Empty;
                                    string gplocation = string.Empty;
                                    int Gatecount = 1;
                                    var Gatepass_id = string.Empty;
                                    var context2 = new IMS.Entities.ServiceVMSEntities();

                                    var doctype = from r in context2.GatepassApprovers
                                                  where r.employeeId == empid
                                                  select new { r.RoleInIMS, r.Location };
                                    foreach (var g in doctype)
                                    {
                                        roleinims = g.RoleInIMS;
                                        Location = g.Location;

                                    };
                                    var q = (from t in context1.GatePasses
                                             where t.GatepassID == item.GatepassID
                                             select new { t.GatePass_Status, t.GatepassID, t.Location });

                                    foreach (var t in q)
                                    {
                                        status = t.GatePass_Status;
                                        Gatepass_id = t.GatepassID;
                                        gplocation = t.Location;
                                        if (role == "Inventory Incharge" && status == "Pending for approver" && Gatecount == 1 && role == roleinims && location == Location)
                                        {
                                            Gatecount++;
                                            <td class="col-md-1">
                                                <span>
                                                    <i class="fa fa-exclamation-circle icon_Inward" style="color:red" title="Pending Approver for Inward"></i>
                                                </span>
                                            </td>
                                            break;
                                        }
                                        else if (role == "Security Guard" && status == "Approved" && Gatecount == 1 && gplocation == location)
                                        {
                                            Gatecount++;
                                            <td class="col-md-1">
                                                <span>
                                                    <i class="fa fa-exclamation-circle icon_Inward" style="color:red" title="Pending Approver for Inward"></i>
                                                </span>
                                            </td>
                                            break;
                                        }

                                    }
                                }


                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <br />

            </div>
            <div class="d-flex align-items-center justify-content-between">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                <div class="pagination justify-content-end">
                    @Html.PagedListPager(Model, page => Url.Action("InwardList",
                        new { Page_no = page, sortOrder = ViewBag.CurrentSort, Name = ViewBag.Name, SearchValue = ViewBag.SearchValue, SearchValue1 = ViewBag.SearchValue1, SearchValue2 = ViewBag.SearchValue2, SearchValue3 = ViewBag.SearchValue3, reason = ViewBag.reason, searchdate = ViewBag.searchdate }))
                </div>
           </div>
            </div>
        </div>

</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            $('table tbody tr').each(function () {
                if ($(this).find('td span i').hasClass('fa-exclamation-circle')) {
                    $(this).addClass('highlight');
                }
            });
        });

        function Valuefunction() {
            debugger
            var search_decide = document.getElementById("select");
            var search_option = search_decide.options[search_decide.selectedIndex].value;
            if (search_option == "GatepassNo") {
                document.getElementById("search_by_text").style.display = "inline";
            }
            else if (search_option == "Gatepass_department") {
                document.getElementById("search_by_text").style.display = "inline";

            }
            else if (search_option == "Gatepass_Location") {
                document.getElementById("search_by_text").style.display = "inline";
            }

            else if (search_option == "ExpenseNature") {
                document.getElementById("search_by_text").style.display = "inline";

            }

            else if (search_option == "GatepassType") {



                document.getElementById("search_by_text").style.display = "inline";


            }
            else if (search_option == "Sender") {
                document.getElementById("search_by_text").style.display = "inline";



            }
            else if (search_option == "Receiver") {
                document.getElementById("search_by_text").style.display = "inline";

            }
            else if (search_option == "Status") {

                document.getElementById("search_by_text").style.display = "inline";


            }

        }
    </script>
}