@model IMS.Models.IMSEntity
@{
    ViewBag.Title = "Add_InwardMaterial";
    Layout = "~/Views/Shared/_Layout_IMS.cshtml";
}


<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link href="~/Content/sweetalert2.min.css" rel="stylesheet" />
<link href="~/assets/css/custom.css" rel="stylesheet" />

<div class="inward-content">
    <h5 class="content-title mb-2">Add Inward Material</h5>
    <div class="card">
        <div class="card-body">

            <div class="form addInward">
                @using (Html.BeginForm("Add_InwardMaterial", "Add_InwardMaterial", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "validateForm()", name = "myForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="SerialNumber" value="0" name="SerialNumber" />
                    <input type="hidden" id="SerialNumberdetail" name="SerialNumbedetail" />
                    <div class="card mb-0">
                        <div class="card-body row p-0">
                            <input type="hidden" name="InwardID" id="InwardID" value="@ViewBag.InwardID" />
                            <input type="hidden" name="InwardDateTime" id="InwardDateTime" value="@DateTime.Now" />
                            <input type="hidden" id="finalnumberforDC" value="0" name="finalnumberforUA" />


                            <div class="col-md-4 mb-3">
                                @Html.LabelFor(model => model.userDepartmentId, htmlAttributes: new { @class = "form-label" })

                                @Html.DropDownList("userDepartmentId", new SelectList(ViewBag.userDepartment, "userDepartmentId", "userDepartmentName"), "Select", new { @class = "form-control input-col user-dept-select", @required = "required" })
                                <div>
                                    @Html.ValidationMessageFor(model => model.userDepartmentId, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "form-label required" })
                                @if (ViewBag.role == "Security Guard")
                                {
                                    if (ViewBag.role == "Security Guard" && ViewBag.location == "Global Port")
                                    {
                                        @Html.DropDownListFor(model => model.Location, new List<SelectListItem>
                                         {
                                            new SelectListItem{Text= "Global Port" , Value="Global Port", Selected = true},
                                         }, new { disabled = "disabled", @style = "width:65%", @class = "form-control input-col", @required = "required", @name = "Location", @id = "Location" })
                                    }
                                    else if (ViewBag.role == "Security Guard" && ViewBag.location == "SEZ")
                                    {
                                        @Html.DropDownListFor(model => model.Location, new List<SelectListItem>
                                         {
                                            new SelectListItem{Text= "SEZ" , Value="SEZ", Selected = true},
                                         }, new { disabled = "disabled", @style = "width:65%", @class = "form-control input-col", @required = "required", @name = "Location", @id = "Location" })

                                    }
                                    else if (ViewBag.role == "Security Guard" && ViewBag.location == "Siddhant")
                                    {
                                        @Html.DropDownListFor(model => model.Location, new List<SelectListItem>
                                        {
                                           new SelectListItem{Text= "Siddhant" , Value="Siddhant", Selected = true},
                                        }, new { disabled = "disabled", @style = "width:65%", @class = "form-control input-col", @required = "required", @name = "Location", @id = "Location" })

                                    }
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Location, new List<SelectListItem>
                                  {
                                     new SelectListItem{Text= "Global Port" , Value="Global Port"},
                                     new SelectListItem{Text= "Siddhant" , Value="Siddhant"},
                                     new SelectListItem{Text= "SEZ" , Value="SEZ"},
                                  }, "Select", new { @style = "width:65%", @class = "form-control input-col", @required = "required", @name = "Location" })

                                }
                            </div>

                            <div class="col-md-4 mb-3 divbill" style="display:none">
                                <label for="billentry" class="form-label">Bill of Entry</label>
                                <input type="text" class="form-control" name="BillofEntry" id="BillofEntry" value="">
                            </div>
                            <div class="col-md-6">
                                <label for="InwardEnteredBy" class="form-label">Inward EnteredBy</label>
                                @if (ViewBag.role == "Security Guard")
                                {
                                    if (ViewBag.role == "Security Guard" && ViewBag.location == "Global Port")
                                    {
                                        @Html.DropDownListFor(model => model.InwardEnteredBy, new List<SelectListItem>
                                           {
                                              new SelectListItem{Text= "Dilip Surwalkar" , Value="Dilip Surwalkar"},
                                              new SelectListItem{Text= "Kavita Thorat" , Value="Kavita Thorat"},
                                              new SelectListItem{Text= "Mahesh Navathale" , Value="Mahesh Navathale"},
                                              new SelectListItem{Text= "Santosh Shimpale" , Value="Santosh Shimpale"},
                                           }, new { @style = "width:65%", @class = "form-control input-col enteredby-select", @required = "required", @name = "InwardEnteredBy", @id = "InwardEnteredBy" })

                                    }
                                    else if (ViewBag.role == "Security Guard" && ViewBag.location == "SEZ")
                                    {
                                        @Html.DropDownListFor(model => model.InwardEnteredBy, new List<SelectListItem>
                                           {
                                              new SelectListItem{Text= "Anupam Sabale" , Value="Anupam Sabale"},
                                              new SelectListItem{Text= "Manoj Dhurander" , Value="Manoj Dhurander"},
                                              new SelectListItem{Text= "Raju Chavan" , Value="Raju Chavan"},
                                              new SelectListItem{Text= "Sachin Lokhande" , Value="Sachin Lokhande"},
                                           }, new { @style = "width:65%", @class = "form-control input-col enteredby-select", @required = "required", @name = "InwardEnteredBy", @id = "InwardEnteredBy" })

                                    }
                                    else if (ViewBag.role == "Security Guard" && ViewBag.location == "Siddhant")
                                    {
                                        @Html.DropDownListFor(model => model.InwardEnteredBy, new List<SelectListItem>
                                           {
                                              new SelectListItem{Text= "Aditya Bhoj" , Value="Aditya Bhoj"},
                                              new SelectListItem{Text= "Arjun Singh" , Value="Arjun Singh"},
                                              new SelectListItem{Text= "Dada Jadhav" , Value="Dada Jadhav"},
                                              new SelectListItem{Text= "Nagesh Shinde" , Value="Nagesh Shinde"},
                                              new SelectListItem{Text= "Umesh Lokhande" , Value="Umesh Lokhande"},
                                              new SelectListItem{Text= "Vijay Kshirsagar" , Value="Vijay Kshirsagar"},
                                              new SelectListItem{Text= "Vinay Kumar Pandey" , Value="Vinay Kumar Pandey"},
                                           }, new { @style = "width:65%", @class = "form-control input-col enteredby-select", @required = "required", @name = "InwardEnteredBy", @id = "InwardEnteredBy" })

                                    }
                                }


                            </div>
                            <div class="External row col-md-12">
                                <div id="existvendor" class="mt-3 mb-3">
                                    <div class="col-md-4 mb-3">
                                        @Html.LabelFor(model => model.vendorId, htmlAttributes: new { @class = "form-label" })
                                        <span> </span> <button type="button" class="trasparantbutton" onclick="divshow()">Vendor Not Found?</button>

                                        @Html.DropDownList("vendorId", new SelectList(ViewBag.vendorList, "vendorId", "vendorName"), "Select Vendor", new { @class = "form-control input-col vendor-name-select", @required = "required" })
                                        <div>
                                            @Html.ValidationMessageFor(model => model.vendorId, "", new { @class = "text-danger" })

                                        </div>

                                    </div>
                                </div>

                                <div id="tempvendor" class="mt-3 mb-3" style="display:none;">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="ReceiverName" class="form-label">Vendor Name</label>
                                                <span> </span>
                                                <button type="button" class="trasparantbutton" onclick="divshowexist()">Exist Vendor?</button>
                                                <input type="text" class="form-control" name="ReceiverName" id="ReceiverName" value="">
                                            </div>

                                            <div class="mb-3">
                                                <label for="ReceiverEmail" class="form-label">Vendor Email</label>
                                                <input type="email" class="form-control" name="ReceiverEmail" id="ReceiverEmail" value="">
                                                <div class="emailvalidation text-danger" style="display:none;">Invalid email address. Please enter a valid email.</div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="ReceiverContact" class="form-label">Vendor Contact No.</label>
                                                <input type="text" class="form-control" name="ReceiverContact" id="ReceiverContact" value="">
                                                <div class="phonevalidation text-danger" style="display:none;">Please enter a valid phone number!</div>
                                            </div>

                                            <div class="mb-3">
                                                <label for="ReceiverAddress" class="form-label">Vendor Address</label>
                                                <textarea class="form-control" id="ReceiverAddress" name="ReceiverAddress"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>




                        </div>
                    </div>


                    <div class="mt-2">
                        <button type="button" id="btnAddRow" class="btn btn-primary">Add Material</button>

                    </div>
                    <div style="display:none" id="errorGST">
                        <p style="color:red;">Please fill the above details before submitting.</p>
                    </div>


                    <div style="display:none" id="datatable" class="mb-20">
                        <input type="hidden" id="hdnRows" value="1" />
                        <table border="1" cellspacing="4" cellpadding="4">
                            <thead>
                                <tr>
                                    <th scope="col">Category</th>
                                    <th scope="col">Material</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Inward_Type</th>
                                    <th scope="col">Remark</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="tblPage" name="data[]">
                                <tr style="display:none">
                                    <input type="hidden" name="srno[]" />
                                    <td><input type="hidden" name="mcategory[]" id="MaterialCategory" /></td>
                                    <td><input type="hidden" name="material[]" id="Material" /></td>
                                    <td><input type="hidden" name="quantity[]" id="M_Quantity" /></td>
                                    <td><input type="hidden" name="inwardtype[]" id="InwardType" /></td>
                                    <td><input type="hidden" name="materialremark[]" id="mremark" /></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>


                    <div class="col-md-12 col-sm-6">
                        <div class="card">
                            <div class="card-body p-0 pt-3 challan">
                                <div class="d-flex justify-content-between mt-3">
                                    <p class="delivery-title">Delivery Challan</p>
                                    <button type="button" id="btnAddDC" class="btn btn-primary mb-2"> Add New </button>
                                </div>
                                <p class="delivery-count">You can only add up to 4 delivery challans.</p>

                                <div class="delivery-challan mb-3">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label for="DC_Number" class="form-label">DeliveryChallen Number</label>
                                            <input type="text" class="form-control dcnm" placeholder="DC Number" name="DC_Number" id="DC_Number" value="">
                                        </div>

                                        <div class="col-md-9">
                                            <label class="form-label" for="fileupload">Upload DeliveryChallen </label>
                                            <div class="d-flex justify-content-between">
                                                <div class="pe-2">
                                                    <label class="d-flex">
                                                        <img src="~/assets/images/icons/file-icon.svg" alt="" />
                                                        <input type="file" id="fileupload" name="DC_Filename" class="btn  btn-file form-control input-col" />
                                                        <input type="hidden" name="filename" id="filename" value="" />
                                                    </label>
                                                    <p class="uploadsowerror" style="display:none; color:red">Please upload the file.</p>
                                                    <p class="filetypeerror" style="display:none; color:red">Please upload the correct file</p>
                                                    <label for="file_size" class="form-label file-size">2.4 MB</label>
                                                </div>

                                            </div>

                                        </div>
                                    </div>
                                </div>

                                <div class="delivery-challan mb-3" id="DC_1" style="display:none">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label for="DC_Number" class="form-label">DeliveryChallen Number</label>
                                            <input type="text" class="form-control dcnm" placeholder="DC Number" name="DC_Number1" id="DC_Number1" value="">
                                        </div>
                                        <div class="col-md-9">
                                            <label class="form-label" for="fileupload">Upload DeliveryChallen </label>
                                            <div class="d-flex justify-content-between">
                                                <div class="pe-2">
                                                    <label class="d-flex">
                                                        <img src="~/assets/images/icons/file-icon.svg" alt="" />
                                                        <input type="file" id="fileupload1" name="DC_Filename" class="btn  btn-file form-control input-col" />
                                                        <input type="hidden" name="filename1" id="filename1" value="" />
                                                    </label>
                                                    <p class="uploadsowerror1" style="display:none; color:red">Please upload the file.</p>
                                                    <p class="filetypeerror1" style="display:none; color:red">Please upload the correct file</p>
                                                    <label for="file_size" class="form-label file-size">2.4 MB</label>
                                                </div>

                                            </div>
                                        </div>

                                    </div>
                                </div>


                                <div class="delivery-challan mb-3" id="DC_2" style="display:none">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label for="DC_Number" class="form-label">DeliveryChallen Number</label>
                                            <input type="text" class="form-control dcnm" placeholder="DC Number" name="DC_Number2" id="DC_Number2" value="">
                                        </div>

                                        <div class="col-md-9">
                                            <label class="form-label" for="fileupload">Upload DeliveryChallen </label>
                                            <div class="d-flex justify-content-between">
                                                <div class="pe-2">
                                                    <label class="d-flex">
                                                        <img src="~/assets/images/icons/file-icon.svg" alt="" />
                                                        <input type="file" id="fileupload2" name="DC_Filename" class="btn  btn-file form-control input-col" />
                                                        <input type="hidden" name="filename2" id="filename2" value="" />
                                                    </label>
                                                    <p class="uploadsowerror2" style="display:none; color:red">Please upload the file.</p>
                                                    <p class="filetypeerror2" style="display:none; color:red">Please upload the correct file</p>
                                                    <label for="file_size" class="form-label file-size">2.4 MB</label>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="delivery-challan mb-3" id="DC_3" style="display:none">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label for="DC_Number" class="form-label">DeliveryChallen Number</label>
                                            <input type="text" class="form-control dcnm" placeholder="DC Number" name="DC_Number3" id="DC_Number3" value="">
                                        </div>

                                        <div class="col-md-9">
                                            <label class="form-label" for="fileupload">Upload DeliveryChallen </label>
                                            <div class="d-flex justify-content-between">
                                                <div class="pe-2">
                                                    <label class="d-flex">
                                                        <img src="~/assets/images/icons/file-icon.svg" alt="" />
                                                        <input type="file" id="fileupload3" name="DC_Filename" class="btn  btn-file form-control input-col" />
                                                        <input type="hidden" name="filename3" id="filename3" value="" />
                                                    </label>
                                                    <p class="uploadsowerror3" style="display:none; color:red">Please upload the file.</p>
                                                    <p class="filetypeerror3" style="display:none; color:red">Please upload the correct file</p>
                                                    <label for="file_size" class="form-label file-size">2.4 MB</label>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3 mt-2">
                                    <button type="submit" class="btn btn-primary material-submit" id="submit">Submit</button>
                                </div>

                            </div>
                        </div>
                    </div>
                }
            </div>


        </div>
    </div>

    <div class="modal modal-lg fade" id="myCompanyModal" tabindex="-1" role="dialog" aria-labelledby="myCompanyModal" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content p-3">
                <div class="modal-header">
                    <h4>Add Materials</h4>
                    <button type="button" id="closeModalHeader" class="btn-close close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" style="padding-top:2px">
                    <div class="row">
                        <div class="col-md-4">

                            <label class="form-label">Material Category</label>
                            @*@Html.DropDownList("Material_CategoryID", new SelectList(ViewBag.materialcategory, "Material_CategoryID", "Material_CategoryName"), "Select", new { @class = "form-control input-col" })*@
                            @Html.DropDownListFor(model => model.Material_CategoryID, new List<SelectListItem>
                             {

                             }, "Select", new { @class = "form-control input-col" })
                            <div>
                                @Html.ValidationMessageFor(model => model.Material_CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label class="form-label">Material</label>
                            @Html.DropDownListFor(model => model.MaterialID, new List<SelectListItem>
                             {

                             }, "Select", new { @class = "form-control input-col" })
                            <div>
                                @Html.ValidationMessageFor(model => model.MaterialID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4 quantity-style">
                            <label class="form-label mb-2" for="Quantity">Quantity</label><br />
                            <input type='button' value='-' class='qtyminus minus' field='quantity' />
                            <input type='text' name='Quantity' value='0' id="Quantity" class='qty' />
                            <input type='button' value='+' class='qtyplus plus' field='quantity' />
                        </div>
                        <div class="col-md-4 mt-3">
                            <label class="form-label">Inward Type</label>
                            @Html.DropDownListFor(model => model.Inward_Type, new List<SelectListItem>
                              {
                                 new SelectListItem{Text= "NonReturnable", Value="NonReturnable" ,Selected = true},
                                 new SelectListItem{ Text = "Returnable", Value="Returnable"}

                              }, "Select", new { @class = "form-control input-col" })
                        </div>
                        <div class="col-md-4 mt-3">
                            <label class="form-label">Material Remark</label>
                            <textarea class="form-control" placeholder="Please provide the material remark." rows="3" cols="5" id="Material_Remark" name="Material_Remark" required></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-start">
                    <button type="submit" id="modal_submit" class="btn btn-primary button button4 action-btn">Submit</button>
                    <button type="button" id="close" class="btn btn-primary button button4">Close</button>

                </div>
            </div>
        </div>
    </div>

    <div class="modal modal-lg fade" id="Editbudgetpopup" tabindex="-1" role="dialog" aria-labelledby="Editinwardpopup" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content p-3">
                <div class="modal-header">
                    <h4>Edit Inward Material</h4>
                    <button type="button" id="closeeditModalHeader" class="btn-close close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" style="padding-top:2px">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="form-label">Material Category</label>
                            @Html.DropDownList("Material_CategoryID", new SelectList(ViewBag.materialcategory, "Material_CategoryID", "Material_CategoryName"), "Select", new { @class = "form-control input-col materialcat" })
                            <div>
                                @Html.ValidationMessageFor(model => model.Material_CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label class="form-label">Material</label>
                            @Html.DropDownListFor(model => model.MaterialID, new List<SelectListItem>
                             {

                             }, "Select", new { @class = "form-control input-col materialedit" })
                            <div>
                                @Html.ValidationMessageFor(model => model.MaterialID, "", new { @class = "text-danger " })
                            </div>
                        </div>
                        <div class="col-md-4 quantity-style">
                            <label class="form-label mb-2" for="Quantity">Quantity</label><br />
                            <input type='button' value='-' class='qtyminus minus' field='quantity' />
                            <input type='text' name='Quantity' value='0' id="Quantityedit" class='qty' />
                            <input type='button' value='+' class='qtyplus plus' field='quantity' />
                        </div>
                        <div class="col-md-4 mt-3">
                            <label class="form-label">Inward Type</label>
                            @Html.DropDownListFor(model => model.Inward_Type, new List<SelectListItem>
                              {
                              new SelectListItem{ Text = "Returnable", Value="Returnable"},
                              new SelectListItem{Text= "NonReturnable", Value="NonReturnable"},
                              }, "Select", new { @class = "form-control input-col inwardedit" })
                        </div>
                        <div class="col-md-4 mt-3">
                            <label class="form-label">Material Remark</label>
                            <textarea class="form-control materialremark" id="Material_Remark" name="Material_Remark" required></textarea>
                        </div>
                    </div>
                </div>

                <div class="modal-footer justify-content-start">
                    <input type="button" value="Save" id="btnEditRow" onclick="save_row()" class="btn btn-primary m-0" />
                    <button type="button" id="closeedit" class="btn btn-primary button button4">Close</button>

                </div>
            </div>
        </div>
    </div>


</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="~/Scripts/sweetalert2.all.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>


<script type="text/javascript">


    $(document).ready(function () {
        debugger
        $("#vendorId").select2();

        $.ajax({
            url: '@Url.Action("Getmaterialcategory", "Add_InwardMaterial")',
            type: 'GET',
            success: function (data) {
                debugger
                var parsedata = JSON.parse(data);

                console.log(parsedata);
                $.each(parsedata, function (i) {
                    var optionhtml1 = '<option value="' +
                        parsedata[i].Material_CategoryID + '">' + parsedata[i].Material_CategoryName + '</option>';
                    $("#Material_CategoryID").append(optionhtml1);
                });
            }
        });



        $('#Material_CategoryID').change(function () {
            var selectedCategoryId = $(this).val();

            $.ajax({
                url: '@Url.Action("Getmaterials", "Add_InwardMaterial")',
                type: 'GET',
                data: { "Material_CategoryID": selectedCategoryId },
                success: function (data) {
                    debugger;
                    $('#MaterialID').empty();
                    var parsedata = JSON.parse(data);
                    console.log(parsedata);
                    $.each(parsedata, function (i) {
                        var optionhtml1 = '<option value="' +
                            parsedata[i].MaterialID + '">' + parsedata[i].MaterialName + '</option>';
                        $("#MaterialID").append(optionhtml1);
                    });
                }
            });
        });

         $('.materialcat').change(function () {
            var selectedCategoryId = $(this).val();
            // Make AJAX call to fetch materials based on selected category
            $.ajax({
                url: '@Url.Action("Getmaterials", "Add_InwardMaterial")',
                type: 'GET',
                data: { "Material_CategoryID": selectedCategoryId },
                success: function (data) {
                    debugger;
                    $('.materialedit').empty();
                    var parsedata = JSON.parse(data);
                    console.log(parsedata);
                    $.each(parsedata, function (i) {
                        var optionhtml1 = '<option value="' +
                            parsedata[i].MaterialID + '">' + parsedata[i].MaterialName + '</option>';
                        $(".materialedit").append(optionhtml1);
                    });
                }
            });
        });



    });

    $(".dcnm").keyup(function () {
        var currentValue = $(this).val();
        var currentTextbox = $(this);

        // Iterate over other textboxes with the same class name
        $(".dcnm").not(currentTextbox).each(function () {
            if ($(this).val() === currentValue) {
               // alert("Deliver Challen Number is not Repeated.");
                Swal.fire({

                    html: "Deliver Challen Number is not Repeated.",
                    showClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOutUp'
                    }
                })
                currentTextbox.val(""); // Clear the value if it's a duplicate
                return false;

            }
        });
    });



        function validateForm() {
            var text = $('#filename').val();
            if (text == "") {
                $('.uploadsowerror').show();
                return false;
            }
        }

        $('.plus').click(function (e) {
                let $input = $(this).prev('input.qty');
                let val = parseInt($input.val());
                $input.val(val + 1).change();
            });


        $("#Location").change(function () {

            var loc = $('select[name=Location]').val();
            if (loc == "SEZ") {
                $(".divbill").show();
            }
            else {
                $(".divbill").hide();
            }
        });

        $('.minus').click(function (e) {
                    let $input = $(this).next('input.qty');
                    var val = parseInt($input.val());
                    if (val > 0) {
                        $input.val(val - 1).change();
                    }
                });

        $('.addfiles').on('click', function () {

            $('#fileupload').click(); return false;
        });

         $('#fileupload').change(function () {

            $('.uploadsowerror').hide();

            var Value = $(this).val();
            var abc = Value.split("\\");
            var name = abc[abc.length - 1];

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetFileType")',
                data: { "filename": name },
                dataType: 'text',

                async: 'false',
                success: function (data) {

                    console.log(data);
                    data = JSON.parse(data);

                    count = data.count;

                    if (count == 1)
                    {

                        $('.filetypeerror').hide();
                        var upload = document.getElementById('filename');

                        upload.value = name;

                        //var fileName = document.getElementById('DC_Filename');

                        //fileName.value = name;
                        //var filesize = document.getElementById('DC_Filesize');

                        //filesize.value = data.contentlength;
                    }
                    else if(count == 0) {
                        $('.filetypeerror').show();
                        return false;
                    }
                  }
                }

      );

        });


    $('.addfiles1').on('click', function () {

            $('#fileupload1').click(); return false;
        });

         $('#fileupload1').change(function () {

            $('.uploadsowerror1').hide();

            var Value = $(this).val();
            var abc = Value.split("\\");
            var name = abc[abc.length - 1];

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetFileType")',
                data: { "filename": name },
                dataType: 'text',

                async: 'false',
                success: function (data) {

                    console.log(data);
                    data = JSON.parse(data);

                    count = data.count;

                    if (count == 1)
                    {

                        $('.filetypeerror').hide();
                        var upload = document.getElementById('filename1');

                        upload.value = name;

                        //var fileName = document.getElementById('DC_Filename1');

                        //fileName.value = name;
                        //var filesize = document.getElementById('DC_Filesize1');

                        //filesize.value = data.contentlength;
                    }
                    else if(count == 0) {
                        $('.filetypeerror1').show();
                        return false;
                    }
                  }
                }
      );

    });

    $('.addfiles2').on('click', function () {

        $('#fileupload2').click();
        return false;
        });

         $('#fileupload2').change(function () {

            $('.uploadsowerror2').hide();

            var Value = $(this).val();
            var abc = Value.split("\\");
            var name = abc[abc.length - 1];

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetFileType")',
                data: { "filename": name },
                dataType: 'text',

                async: 'false',
                success: function (data) {

                    console.log(data);
                    data = JSON.parse(data);

                    count = data.count;

                    if (count == 1)
                    {

                        $('.filetypeerror2').hide();
                        var upload = document.getElementById('filename2');

                        upload.value = name;

                        //var fileName = document.getElementById('DC_Filename2');

                        //fileName.value = name;
                        //var filesize = document.getElementById('DC_Filesize2');

                        //filesize.value = data.contentlength;
                    }
                    else if(count == 0) {
                        $('.filetypeerror2').show();
                        return false;
                    }
                  }
                }

      );

        });


     $('.addfiles3').on('click', function () {

            $('#fileupload3').click(); return false;
        });

         $('#fileupload3').change(function () {

            $('.uploadsowerror3').hide();

            var Value = $(this).val();
            var abc = Value.split("\\");
            var name = abc[abc.length - 1];

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetFileType")',
                data: { "filename": name },
                dataType: 'text',

                async: 'false',
                success: function (data) {

                    console.log(data);
                    data = JSON.parse(data);

                    count = data.count;

                    if (count == 1)
                    {

                        $('.filetypeerror3').hide();
                        var upload = document.getElementById('filename3');

                        upload.value = name;

                        //var fileName = document.getElementById('DC_Filename2');

                        //fileName.value = name;
                        //var filesize = document.getElementById('DC_Filesize2');

                        //filesize.value = data.contentlength;
                    }
                    else if(count == 0) {
                        $('.filetypeerror3').show();
                        return false;
                    }
                  }
                }

      );

        });



        //create table

    $("#btnAddRow").on("click", function () {
        $('#myCompanyModal').modal('show');
    });

    $("#close").on("click", function () {
        $('#myCompanyModal').modal('hide');
    });

    $("#closeedit").on("click", function () {
        $('#Editbudgetpopup').modal('hide');
    });

    $("#closeModalHeader").on("click", function () {
        $('#myCompanyModal').modal('hide');
    });

    $("#closeeditModalHeader").on("click", function () {
        $('#Editbudgetpopup').modal('hide');
    });

    var selectedMaterials = [];

    $("#modal_submit").on("click", function () {
        debugger;
        var serialno = $("#SerialNumber").val();
        var remark = $("#Material_Remark").val();
        var material = $('#MaterialID').find('option:selected').text();
        var materialcat = $('#Material_CategoryID').find('option:selected').text();
        var materialid = $('#MaterialID').find('option:selected').val();
        var materialcatid = $('#Material_CategoryID').find('option:selected').val();
               var qty = $("#Quantity").val();
               var invtype = $("#Inward_Type").find('option:selected').text();
               var srno = (parseInt(serialno) + 1);
        var mid = $('#MaterialID').find('option:selected').val();

        var selectedMaterial = materialid;

        if (selectedMaterials.includes(selectedMaterial)) {
           // alert("Material already added!");
            Swal.fire({

                html: "Material already added!",
                showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                }
            })
            return false;
        }
           if (material == "Select" || qty == "0" || invtype == "Select") {
                   $('#submit').hide();
                   document.getElementById('errorGST').style.display = 'block';
               }
               else {
                   document.getElementById('datatable').style.display = 'block';
                   var row = $("#hdnRows").val();
               $("#tblPage").append('<tr>' +
                   '<input type="text"name="srno[]" id="Serialno' + srno + '" value ="' + srno + ' "readonly="readonly"/> ' +
                   '<input type="hidden" name="mid[]" id="mid' + srno + '" value ="' + mid + '"/>' +
                   '<input type="hidden" name="mcatid[]" id="mcatid' + srno + '" value ="' + materialcatid + '"/>' +
                   '<td><input type="text" name="mcategory[]" id="materialcat' + srno + '" value ="' + materialcat + '" data-catid = "' + materialcatid + '" readonly="readonly"/></td>' +
                   '<td><input type="text" name="material[]" id="materials' + srno + '" value ="' + material + '" data-mid = "' + materialid + '" readonly="readonly"/></td>' +
                   '<td><input type="text" name="m_quantity[]" id="M_Quantity' + srno + '"value ="' + qty + '"readonly="readonly"/></td>' +
                   '<td><input type="text" name="invtype[]" id="invtype' + srno + '"value ="' + invtype + '"readonly="readonly"/></td>' +
                   '<td><input type="text" name="matremark[]" id="mremark' + srno + '"value ="' + remark + '"readonly="readonly"/></td>' +
                   '<td style ="white-space: nowrap"><div class="d-flex align-items-center"><button class="btnDelete" id="btnDelete' + srno + '" onclick="deleteRow(this,' + srno + ');"><img class="px-2" src="~/assets/images/icons/trash.svg" alt=""></button>' +
                   //'<td><button id="editbtn' + srno + '" onclick="editRow(' + srno + ');">edit Row</button></td>' +
                   '<input type="button" class="editbtn"  id="editbtn' + srno + '" onclick="editRow(' + srno + ',' + "'" + materialcatid + "'" + ' , ' + "'" + materialid + "'" + ',' + "'" + qty + "'" + ',' + "'" + invtype + "'" + ','+ "'" + remark + "'" +'); "/></div></td>' +
                   '</tr>');

               document.getElementById('SerialNumber').value = srno;

               $('#submit').show();
               $('#MaterialID').prop('selectedIndex', 0);
               $('#Material_CategoryID').prop('selectedIndex', 0);
               $('#MaterialID').empty();
               $('#Inward_Type').prop('selectedIndex', 0);
               $("#Quantity").val(0);
               $("#Material_Remark").val('');
               document.getElementById('errorGST').style.display = 'none';
               selectedMaterials.push(selectedMaterial);
               }
    });



        function deleteRow(obj, srno1) {
            debugger;
            console.log(obj);

            var quantityvalue = document.getElementById("M_Quantity" + srno1);
            var materialvalue = document.getElementById("mid" + srno1);
            var quan1;
            quan1 = quantityvalue.value;

            var serialno = $("#SerialNumber").val();
            var srno = (parseInt(serialno) - 1);
            document.getElementById('SerialNumber').value = srno;

            $(obj).parent().parent().parent().remove();
            if (srno == 0) {
                document.getElementById('datatable').style.display = 'none';
            }

            var valueToRemove = materialvalue.value;
            var index = selectedMaterials.indexOf(valueToRemove);
            if (index !== -1) {
                selectedMaterials.splice(index, 1);
            }
            document.getElementById('QuantityDetails').value = "";
        }


    function editRow(srno, materialcat, material, qty, invtype, remark) {
        debugger;


            $('#Editbudgetpopup').modal('show');
            $('#btnAddRow').hide();
            var ser = document.getElementById('SerialNumberdetail');
            ser.value = srno;
            //$('#Material_CategoryID option[value="' + materialcat + '"]').prop("selected", true);
           // ddlistmaterialeditfunction(materialcat);
            //$('#MaterialID option[value="' + material + '"]').prop("selected", true);
             $('.materialcat').val(materialcat);
             $('.materialcat').trigger('change');
             $('.materialedit option[value="' + material + '"]').prop("selected", true);// Set material category
             $('#Inward_Type option[value="' + invtype + '"]').prop("selected", true);
             $("#Quantityedit").val(qty);
             $(".materialremark").val(remark);

        }

        function save_row() {
            debugger;

            var ser = $('#SerialNumberdetail').val();
            var material = $('.materialedit').find('option:selected').text();
            var materialcat = $('.materialcat').find('option:selected').text();
            var materialid = $('.materialedit').find('option:selected').val();
            var materialcatid = $('.materialcat').find('option:selected').val();
            var qty = $("#Quantityedit").val();
            var remark = $(".materialremark").val();
            var invtype = $(".inwardedit").find('option:selected').text();

            if (Material != "Select" || qty != "0" || invtype != "Select") {
                $('#submit').show();
                debugger;
                document.getElementById('errorGST').style.display = 'none';

                var mcat = document.getElementById("materialcat" + ser);
                mcat.value = materialcat;


                var quan_id = document.getElementById("M_Quantity" + ser);
                var remark_id = document.getElementById("mremark" + ser);
                remark_id.value = remark;
                quan_id.value = qty;
                var mid = document.getElementById("materials" + ser);
                mid.value = material;

                var invid = document.getElementById("invtype" + ser);
                invid.value = invtype;

                $('#MaterialID').prop('selectedIndex', 0);
                $('#Material_CategoryID').prop('selectedIndex', 0);
                $('#MaterialID').empty();
                $('#Inward_Type').prop('selectedIndex', 0);
                $("#Quantity").val(0);
                $("#Material_Remark").val('');
                $('#btnAddRow').show();
                $('#Editbudgetpopup').modal('hide');
               // document.getElementById('btnEditRow').style.display = 'none';
            }
            else {
                $('#btnAddRow').hide();
                document.getElementById('btnEditRow').style.display = 'block';
                $('#submit').hide();

                document.getElementById('errorGST').style.display = 'block';
            }

    }


    $('#btnAddDC').click(function () {
        debugger;

        var val_to = document.getElementById('finalnumberforDC').value;
        if (val_to == "3")
        {
            document.querySelector('.delivery-count').style.display = "block";
        }
        if (val_to == "0") {
            document.getElementById('DC_1').style.display = 'block';
            //document.getElementById('DC_1').style.display = 'flex';

            var turnovercountvalue = document.getElementById('finalnumberforDC');
            turnovercountvalue.value = "1";

           // document.getElementById('backUA').style.display = 'block';
        }
        if (val_to == "1") {
            document.getElementById('DC_2').style.display = 'block';
            //document.getElementById('DC_2').style.display = 'flex';

            var turnovercountvalue = document.getElementById('finalnumberforDC');
            turnovercountvalue.value = "2";

            // document.getElementById('backUA').style.display = 'block';
        }

        if (val_to == "2") {
            document.getElementById('DC_3').style.display = 'block';
          //  document.getElementById('DC_3').style.display = 'flex';

            var turnovercountvalue = document.getElementById('finalnumberforDC');
            turnovercountvalue.value = "3";

            // document.getElementById('backUA').style.display = 'block';
        }

    });
    function divshow() {
        debugger

        document.getElementById('existvendor').style.display = 'none';
        document.getElementById('tempvendor').style.display = 'block';

        $("#ReceiverEmail").val("");
        $("#ReceiverContact").val("");
        $("#ReceiverAddress").val("");

        $("#vendorId").attr('required', false);
        $("#ReceiverEmail").attr('disabled', false);
        $("#ReceiverContact").attr('disabled', false);
        $("#ReceiverAddress").attr('disabled', false);

    }

    function divshowexist() {

        document.getElementById('existvendor').style.display = 'block';
        document.getElementById('tempvendor').style.display = 'none';
        $("#vendorId").attr('required', true);
        $("#ReceiverEmail").val("");
        $("#ReceiverContact").val("");
        $("#ReceiverAddress").val("");

    }
</script>